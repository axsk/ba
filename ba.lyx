#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass amsart
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title

\shape up
PCCA+ on Markov Chains
\end_layout

\begin_layout Section

\shape up
Introduction
\end_layout

\begin_layout Section

\shape up
Introduction to Markov Chains
\end_layout

\begin_layout Standard
A Markov chain is a stochastic process, consisting of a sequence of random
 variables 
\begin_inset Formula $X_{i}:\Omega\rightarrow S$
\end_inset

, 
\begin_inset Formula $i\in\mathbb{N}$
\end_inset

 satisfying the Markov property: 
\begin_inset Formula 
\[
P(X_{t+1}=x|X_{1}=x_{1},X_{2}=X_{2},...,X_{t}=x_{t})=P(X_{t+1}=x|X_{t}=x_{t})\,\forall t\in\mathbb{N}.
\]

\end_inset

It is common to interpret S as the state space of possible outcomes of measureme
nts at the time 
\begin_inset Formula $t$
\end_inset

 represented by 
\begin_inset Formula $X_{t}$
\end_inset

.
 The Markov property assures, that the transitions to the next timestep
 
\begin_inset Formula $t+1$
\end_inset

 only depend on the current state 
\begin_inset Formula $x_{t}$
\end_inset

.
 This means that the process at time 
\begin_inset Formula $t$
\end_inset

 has no memory of its previous history 
\begin_inset Formula $(x_{1},...,x_{t-1})$
\end_inset

, thus this also sometimes called the memoryless property.
\end_layout

\begin_layout Standard
We will furthermore assume that 
\begin_inset Formula $S$
\end_inset

 is finite and that the process is autonomous, i.e.
 not explicitly depending on the time:
\begin_inset Formula 
\[
P(X_{t+1}=x|X_{t}=y)=P(X_{t}=x|X_{t-1}=y)\forall t\in\mathbb{N}
\]

\end_inset


\end_layout

\begin_layout Standard
This does not realy impose a restriction as any non-autonomous process can
 be turned into an autonomous one.
 By adding all possible times to the state space 
\begin_inset Formula $S$
\end_inset

 taking the cartesian product 
\begin_inset Formula $S':=\mathbb{N}\times S$
\end_inset

 the explicit time-dependence of the process on 
\begin_inset Formula $S$
\end_inset

 can be implicitly subsumed by an autonomous process on 
\begin_inset Formula $S'$
\end_inset

.
\end_layout

\begin_layout Standard
For finite 
\begin_inset Formula $S$
\end_inset

 we can, enumerating all states in 
\begin_inset Formula $S$
\end_inset

, encode the whole process in the transition matrix
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
P_{ij}:=P\left(X_{t+1}=j|X_{t}=i\right)
\]

\end_inset


\end_layout

\begin_layout Standard
A 
\emph on
stationary distribution
\emph default
 is a row vector 
\begin_inset Formula $\pi$
\end_inset

 satisfying
\begin_inset Formula 
\[
\pi P=\pi
\]

\end_inset


\end_layout

\begin_layout Standard
A markov chain is called 
\emph on
reversible
\emph default
 if there exists a stationary distribution 
\begin_inset Formula $\pi$
\end_inset

 satisfying the detailed balance equation
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\pi_{i}P_{ij}=\pi_{j}P_{ji}
\]

\end_inset


\end_layout

\begin_layout Standard
which assures that the back and forth transitions between any two states
 
\begin_inset Formula $\pi_{i}$
\end_inset

, 
\begin_inset Formula $\pi_{j}$
\end_inset

 equalize.
\end_layout

\begin_layout Subsection
Discretization of the state space
\end_layout

\begin_layout Standard
Although we only consider a discrete state space in this thesis, the results
 are extensible to continous state spaces as well.
 
\end_layout

\begin_layout Standard
The easiest way is using a set-based discretization, dividing the state
 space into a finite mesh of subsets.
\end_layout

\begin_layout Standard
For high dimensional state spaces, as for example met in molecular dynamics,
 this approach exhibits the curse of dimensionality, as the size of the
 mesh grows exponentially with the dimensions.
 As solution to this problem Weber developed a meshless version of PCCA+
 using a global Galerkin discretization.
\end_layout

\begin_layout Subsection
Metastability
\begin_inset Formula 
\[
Px\approx x
\]

\end_inset


\end_layout

\begin_layout Section

\shape up
Spectral Clustering
\end_layout

\begin_layout Subsection
Membership vectors
\end_layout

\begin_layout Standard
We now look for a way to represent the clustering into 
\begin_inset Formula $n$
\end_inset

 clusters.
\end_layout

\begin_layout Standard
One possibility of assigning states to a cluster k is by means of a 
\emph on
characteristic vector
\emph default
 
\begin_inset Formula $\chi_{i}\in\left\{ 0,1\right\} ^{n}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\chi_{k,i}=\begin{cases}
1, & \text{if state \ensuremath{i}}\text{ belongs to cluster }k\\
0, & \text{else }
\end{cases}.
\]

\end_inset


\end_layout

\begin_layout Standard
This 
\emph on
crisp clustering 
\emph default
approach, used by 
\emph on
Perron Cluster Analysis
\emph default
 (PCCA) of Deuflhard et al., has the disadvantage of not beeing robust against
 small pertubations, as continious changes in 
\begin_inset Formula $P$
\end_inset

 finally result in discontinous changes in the clustering.
\end_layout

\begin_layout Standard
Weber and Galliat, Deuflhard and Weber therefor developed a robust version,
 
\emph on
Robust Perron Cluster Analyis
\emph default
 (PCCA+), by making use of a 
\emph on
fuzzy clustering
\emph default
 representing each cluster by an
\emph on
 almost characteristic vector 
\begin_inset Formula $\chi_{k}\in\left[0,1\right]^{n}$
\end_inset

.

\emph default
 
\end_layout

\begin_layout Standard

\emph on
Almost characteristic vectors 
\begin_inset Formula $\left\{ \chi_{i}\right\} _{i=1}^{n}$
\end_inset


\emph default
 satisfying the partition of unity property
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
\sum_{i=1}^{n}\chi_{i}=1
\]

\end_inset


\end_layout

\begin_layout Standard
are called 
\emph on
membership vectors
\emph default
 as they describe the membership of each state to each cluster meaningfully.
\end_layout

\begin_layout Subsection
Galerkin projection
\end_layout

\begin_layout Standard
Given a set of 
\emph on
membership vectors 
\emph default
describing a clustering, we now aim at a Galerkin projection to get a reduced
 version of 
\begin_inset Formula $P$
\end_inset

 representing the dynamics on the clusters.
\end_layout

\begin_layout Standard
Assuming a 
\emph on
starting distribution 
\emph default

\begin_inset Formula $\eta\in\left[0,1\right]^{N}$
\end_inset

, we define the diagonal matrix 
\begin_inset Formula $D_{\eta}:=diag\left(\eta_{1},...,\eta_{N}\right)\in\left[0,1\right]^{NxN}$
\end_inset

 .
\end_layout

\begin_layout Standard
By multiplying the conditional transitions of 
\begin_inset Formula $P$
\end_inset

 with the actual starting distribution we get the unconditional transitions
 matrix 
\begin_inset Formula $D_{\eta}P$
\end_inset

, which we can interpret as amount of actual transitions between the states.
 Now multiplying with a membership vector 
\begin_inset Formula $\chi_{i}^{T}$
\end_inset

 from the left gives the numbers of transitions starting in 
\begin_inset Formula $\chi_{i}$
\end_inset

 and finally multiplying with 
\begin_inset Formula $\chi_{j}$
\end_inset

 from the right measures the amount of these transitions landing in 
\begin_inset Formula $\chi_{j}$
\end_inset

, i.e.
 
\begin_inset Formula $\chi_{i}^{T}D_{\eta}P\chi_{j}$
\end_inset

.
\end_layout

\begin_layout Standard
gives the unconditional number of transitions from cluster 
\begin_inset Formula $i$
\end_inset

 to cluster 
\begin_inset Formula $j$
\end_inset

.
 Note that this interpretation is associative in the sense that we come
 to the same results by for example first interpreting 
\begin_inset Formula $\chi_{i}^{T}D_{\eta}$
\end_inset

 as actual amount of states in the cluster 
\begin_inset Formula $\chi_{i}$
\end_inset

 and measure the overlap with where the transitions to 
\begin_inset Formula $\chi_{j}$
\end_inset

, come from: 
\begin_inset Formula $\left(\chi_{i}^{T}D_{\eta}\right)(P\chi_{j})$
\end_inset

.
\end_layout

\begin_layout Standard
We can vectorize this equation to compute the unconditional transitions
 by means of the 
\emph on
membership matrix 
\begin_inset Formula $\chi=\left(\chi_{1},...,\chi_{n}\right)$
\end_inset

:
\begin_inset Formula 
\[
\chi^{T}D_{\eta}P\chi
\]

\end_inset


\end_layout

\begin_layout Standard
We then turn this unconditional transitions into conditinal by dividing
 by the number of states belonging to 
\begin_inset Formula $\chi_{i}$
\end_inset

 and have to make up the fact that we do not count all transitions...
 Baustelle
\end_layout

\begin_layout Standard
Thus we finally define the 
\emph on
coupling matrix via
\begin_inset Formula 
\[
P_{C}:=\left(\chi^{T}D_{\eta}\chi\right)^{-1}\chi^{T}D_{\eta}P\chi.
\]

\end_inset


\end_layout

\begin_layout Standard
For a correct representation of the dynamics of the markov chain we require
 that discretization and time propagation commute in the sense that 
\begin_inset Formula 
\[
P\chi=\chi P_{C}
\]

\end_inset


\end_layout

\begin_layout Standard
This property ensures that the 
\emph on
coupling matrix 
\emph default
represents the right dynamics even for long times, as we can see by following
 both outer paths of the following diagram.
\end_layout

\begin_layout Standard
Thus one can also consider 
\begin_inset Formula $\left(\cdot\rightarrow\cdot\chi,\, P\rightarrow P_{C}\right)$
\end_inset

 as a functor.
\end_layout

\begin_layout Standard
ROLE OF 
\begin_inset Formula $\eta$
\end_inset

?
\end_layout

\begin_layout Subsection
Metastability and PCCA+
\end_layout

\begin_layout Standard
The key idea of extracting metastable behaviour via PCCA+ is transforming
 the eigenvectors 
\begin_inset Formula $X$
\end_inset

 of 
\begin_inset Formula $P$
\end_inset

 to membership vectors representing the clusters of 
\begin_inset Formula $S$
\end_inset

.
 Taking linear combinations 
\begin_inset Formula $A$
\end_inset

 of 
\begin_inset Formula $n$
\end_inset

 eigenvectors 
\begin_inset Formula $X=\left(x_{1},...,x_{n}\right)$
\end_inset

 with eigenvalues 
\begin_inset Formula $\lambda_{1},...,\lambda_{n}\approx1$
\end_inset

 guarantees 
\begin_inset Quotes eld
\end_inset

metastable
\begin_inset Quotes erd
\end_inset

 (in some way) properties of the cluster 
\begin_inset Formula $\chi_{j}=XA_{:,j}$
\end_inset

:
\begin_inset Formula 
\begin{align*}
\left\langle P\chi_{j},\chi_{j}\right\rangle  & =\left\langle \sum_{k}PX_{ik}A_{kj},\sum_{k}X_{ik}A_{kj}\right\rangle \\
 & =\left\langle \sum_{k}\lambda_{k}X_{ik}A_{kj},\sum_{k}X_{ik}A_{kj}\right\rangle \\
 & =\sum_{i,k}\lambda_{k}\left(X_{ik}A_{kj}\right)^{2}\\
 & \ge\min_{k}\lambda_{k}\sum\left(X_{ik}A_{kj}\right)_{i,k}^{2}\\
 & =\min_{k}\lambda_{k}\left\langle \chi_{j},\chi_{j}\right\rangle \\
\Rightarrow\frac{\left\langle P\chi_{j},\chi_{j}\right\rangle }{\left\langle \chi_{j},\chi_{j}\right\rangle } & \approx1
\end{align*}

\end_inset


\end_layout

\begin_layout Section

\shape up
PCCA+
\end_layout

\begin_layout Section

\shape up
Stochastic interpretation
\end_layout

\begin_layout Section

\shape up
Nonreversible processes
\end_layout

\begin_layout Section

\shape up
Implementation
\end_layout

\begin_layout Section

\shape up
Eyetracking
\end_layout

\begin_layout Section

\shape up
References
\end_layout

\end_body
\end_document
